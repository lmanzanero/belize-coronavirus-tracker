{"version":3,"sources":["repository/api.tsx","components/charts/Chart.tsx","utils/utils.js","components/charts/TimelineChart.tsx","components/Footer.tsx","components/charts/GenderChart.tsx","components/charts/DeathsTimelineChart.tsx","components/charts/LiveTimelineChart.tsx","icons/belize-flag.png","icons/positive.png","icons/recovered.png","icons/negative.png","icons/swab.png","icons/death.png","icons/search.png","icons/active.png","components/Header.tsx","components/MapSection.tsx","App.tsx","index.tsx"],"names":["getApiData","axios","get","getTotalAllStatusCases","getCasesByTimeline","getDeathCasesSinceDayOne","getRecoveredCasesSinceDayOne","getConfirmedCasesSinceDayOne","getCasesByDistrict","getCasesByGender","getGithubContributors","getCommunityCases","CasesByDistrictChart","useQuery","refetchOnWindowFocus","data","isLoading","useEffect","loadedData","features","map","district","name","attributes","Area","value","districts","text","max","length","slice","split","join","districtCases","ctx","document","getElementById","Chart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","legend","display","maintainAspectRatio","responsive","title","fontSize","className","id","TimelineChart","months","error","getDateFromData","React","useCallback","dayCases","date","Date","getMonth","cases","Cases","getDataByMonth","dataArray","dataSet","monthName","i","monthCases","filter","Math","apply","month","Object","values","push","position","layout","padding","bottom","left","right","top","style","margin","Footer","href","target","rel","role","aria-label","contributor","html_url","key","src","avatar_url","alt","GenderChart","confirmale","confirmfemale","DeathsTimelineChart","LiveTimelineChart","recoveredData","recoveredLoading","deathsData","deathsLoading","activeData","activeLoading","cfg","cleanUpData","pointRadius","fill","lineTension","dataSrc","t","getTime","y","Active","cleanUpActiveData","animation","duration","xAxes","distribution","offset","major","enabled","fontStyle","source","autoSkip","autoSkipPadding","maxRotation","sampleSize","afterBuildTicks","scale","ilen","val","tick","currMajor","lastMajor","majorUnit","_majorUnit","firstTick","moment","second","minute","hour","isoWeekday","gridLines","drawBorder","scaleLabel","labelString","tooltips","intersect","mode","callbacks","tooltipItem","myData","datasetIndex","parseFloat","toFixed","Header","refetch","console","log","useState","setDate","Number","lastUpdate","formmatedDate","toDateString","logo","confirmed","onChange","e","swab","search","negative","positive","death","deaths","recovered","active","MapSection","getVillages","getAttribute","setMapData","mapAreas","setMapAreas","formattedCommunityData","DISTRICT","x","SETTNAME","formattedApiData","columnName","sortedData","object","keys","indexOf","sortData","Belize","forEach","village","allData","area","index","onClick","data-value","App","ReactGA","initialize","pageview","window","location","pathname","rootElement","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.a4e80024.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getApiData = () => {\n  return axios.get('https://covid19.mathdro.id/api/countries/belize/confirmed');\n};\n\nconst getTotalAllStatusCases = () => {\n  return axios.get('https://api.covid19api.com/total/country/belize');\n};\n\nconst getCasesByTimeline = () => {\n  return axios.get('https://api.covid19api.com/total/dayone/country/belize/status/confirmed');\n};\n\nconst getDeathCasesSinceDayOne = () => {\n  return axios.get('https://api.covid19api.com/country/belize/status/deaths/live');\n};\n\nconst getRecoveredCasesSinceDayOne = () => {\n  return axios.get('https://api.covid19api.com/country/belize/status/recovered/live');\n};\n\nconst getConfirmedCasesSinceDayOne = () => {\n  return axios.get('https://api.covid19api.com/country/belize/status/confirmed/live');\n};\n\nconst getDeathsByTimeLine = () => {\n  return axios.get(\n    'https://services6.arcgis.com/8TOGEuvqHhwQHCke/arcgis/rest/services/MOH_Infographics_CountryIndicator/FeatureServer/0/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=ObjectId%2CConfirmed%2CDate&orderByFields=Date%20asc&resultOffset=0&resultRecordCount=32000&resultType=standard&cacheHint=true',\n  );\n};\nconst getCasesByDistrict = () => {\n  return axios.get('https://services6.arcgis.com/8TOGEuvqHhwQHCke/arcgis/rest/services/DistrictIndicators/FeatureServer/0/query?f=json&where=(Last_Update%20%3D%20%27Yes%27)%20AND%20(Last_Update%3D%27Yes%27)&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&groupByFieldsForStatistics=Area&orderByFields=value%20desc&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22Cases%22%2C%22outStatisticFieldName%22%3A%22value%22%7D%5D&outSR=102100&resultType=standard&cacheHint=true')\n}\n\nconst getCasesByGender = () => {\n  return axios.get(\n    'https://services6.arcgis.com/fbMLjLVHNRUxmuIA/arcgis/rest/services/country_covid19_cases/FeatureServer/0/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&outStatistics=%5B%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22confirmale%22%2C%22outStatisticFieldName%22%3A%22confirmale%22%7D%2C%7B%22statisticType%22%3A%22sum%22%2C%22onStatisticField%22%3A%22confirmfemale%22%2C%22outStatisticFieldName%22%3A%22confirmfemale%22%7D%5D&resultType=standard&cacheHint=true',\n  );\n};\n\nconst getGithubContributors = () => {\n  return axios.get('https://api.github.com/repos/lmanzanero/belize-coronavirus-tracker/contributors');\n};\n\nconst getCommunityCases = () => {\n  return axios.get('https://services6.arcgis.com/8TOGEuvqHhwQHCke/arcgis/rest/services/CommunityCases/FeatureServer/0/query?f=json&where=((LastUpdate%20%3D%20%27Yes%27)%20AND%20(DailyCases%20IS%20NOT%20NULL))%20AND%20(LastUpdate%3D%27Yes%27)&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=DISTRICT%20asc%2CSETTNAME%20asc&outSR=102100&resultOffset=0&resultRecordCount=100&resultType=standard&cacheHint=true');\n}\n\nexport {\n  getCasesByDistrict,\n  getCasesByGender,\n  getApiData,\n  getTotalAllStatusCases,\n  getCasesByTimeline,\n  getDeathsByTimeLine,\n  getDeathCasesSinceDayOne,\n  getRecoveredCasesSinceDayOne,\n  getConfirmedCasesSinceDayOne,\n  getGithubContributors,\n  getCommunityCases,\n};\n","import React, { useEffect } from 'react'; \nimport { useQuery } from 'react-query';\nimport { getCasesByDistrict } from '../../repository/api';\nimport Chart from 'chart.js'; \nimport { shortenName } from 'utils/utils';\n\nconst CasesByDistrictChart = () => {\n  const { data, isLoading } = useQuery('casesbydistrict', getCasesByDistrict, {refetchOnWindowFocus: false});\n  useEffect(() => {   \n    if(data) {     \n      const loadedData = data?.data.features.map((district:any) => { \n        let casesByDistrict = {\n          name: district.attributes.Area,\n          value: district.attributes.value,\n        } \n        return casesByDistrict;\n       });;   \n\n      const districts = loadedData.map((district:any) => shortenName(district.name, 10)); \n      const districtCases = loadedData.map((district:any) => district.value); \n    var ctx = document.getElementById('casesByDistrict') as HTMLCanvasElement;  \n    var casesByGenderPieChart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n          labels: isLoading ? [] : districts,\n          datasets: [{\n              label: 'Cases',\n              data: districtCases,\n              backgroundColor: [\n                  'rgba(255, 99, 132, 0.7)',\n                  'rgba(54, 162, 235, 0.7)',\n                  'rgba(255, 206, 86, 0.7)',\n                  'rgba(75, 192, 192, 0.7)',\n                  'rgba(153, 102, 255, 0.7)',\n                  'rgba(255, 159, 64, 0.7)',\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.1)',\n              ],\n              borderColor: [\n                  'rgba(255, 99, 132, )',\n                  'rgba(54, 162, 235, 1)',\n                  'rgba(255, 206, 86, 1)',\n                  'rgba(75, 192, 192, 1)',\n                  'rgba(153, 102, 255, 1)',\n                  'rgba(255, 159, 64, 1)',\n              ],\n              borderWidth: 1,\n          }],\n      },\n      options: {\n          scales: {\n              yAxes: [\n                {\n                  ticks: {\n                      beginAtZero: true,\n                  },\n              },\n            ],\n          },\n          legend: {\n            display: false,\n          },\n          maintainAspectRatio: false,\n          responsive: true,\n          title: {\n            display: true,\n            text: 'Cases by District',\n            fontSize: 30,\n          },\n      },\n  });\n} \n}, [isLoading, data]) \n\n\n\n  return (\n     \n    <div className={`chart ${isLoading && !data ? 'loading' : ''}`}>  \n      <div className=\"chart-inner\">   \n      <canvas id=\"casesByDistrict\"></canvas>\n      </div>    \n    </div>\n  ); \n}\n\nexport default CasesByDistrictChart; \n","export function shortenName(text,max) {\n  return text && text.length > max ? text.slice(0,max).split(' ').slice(0, -1).join(' ') + '...' : text\n}\n\nexport function sortData(data, columnName) { \n  var sortedData = [];\n  // console.log(data);\n  for (var i = 0; i < data.length; i++) {\n      var object = data[i];\n\n      if (Object.keys(sortedData).indexOf(object[columnName]) === -1) {\n          sortedData[object[columnName]] = [];\n      }\n\n      sortedData[object[columnName]].push(object);\n  }\n  \n  return sortedData;\n}\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { getCasesByTimeline } from '../../repository/api';\nimport Chart from 'chart.js';\n\nconst TimelineChart = () => {\n  const { data, isLoading, error } = useQuery('timelinecases', getCasesByTimeline, {refetchOnWindowFocus: false});\n  const months = [\n    'Jan..',\n    'Feb..',\n    'Mar..',\n    'Apr..',\n    'May..',\n    'Jun..',\n    'Jul..',\n    'Aug..',\n    'Sep..',\n    'Oct...',\n    'Nov...',\n    'Dec...',\n  ];\n\n  const getDateFromData = React.useCallback(() => {\n    const dataSet = isLoading\n      ? []\n      : data?.data.map((dayCases: any) => {\n          let date = new Date(dayCases.Date);\n          const formattedData = {\n            date: date.getMonth(),\n            cases: dayCases.Cases,\n          };\n          return formattedData;\n        });\n    return dataSet;\n  }, [data, isLoading]);\n\n  const getDataByMonth = React.useCallback(() => {\n    let dataArray: any = [];\n    const dataSet = getDateFromData();\n    if (dataSet.length !== 0) {\n      const monthData = months.map((monthName, i) => {\n        const monthCases = dataSet.filter((date: any) => date.date === i);\n        const filteredMonth = {\n          [monthName]:\n            monthCases.length === 0\n              ? 0\n              : Math.max.apply(\n                  Math,\n                  monthCases.map((month: any) => month.cases),\n                ),\n        };\n        return filteredMonth;\n      });\n\n      monthData.map((month) => {\n        const cases = Object.values(month);\n        dataArray.push(...cases);\n      });\n      // console.log(dataArray);\n      return dataArray;\n    }\n  }, [getDateFromData, months]);\n\n  useEffect(() => {\n    var ctx = document.getElementById('casesByTimelineCart') as HTMLCanvasElement;\n    var casesByTimelineCart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: isLoading ? [] : months,\n        datasets: [\n          {\n            label: 'Cases',\n            data: isLoading ? [0, 0, 3, 18, 18, 24, 48, 1007, 1825, 2243] : getDataByMonth(),\n            backgroundColor: [\n              'rgba(54, 162, 235, 0.5)',\n              'rgba(255, 99, 132, 0.7)',\n              'rgba(54, 162, 235, 0.7)',\n              'rgba(255, 206, 86, 0.7)',\n              'rgba(75, 192, 192, 0.7)',\n              'rgba(153, 102, 255, 0.7)',\n              'rgba(255, 159, 64, 0.7)',\n              'rgba(255, 159, 64, 0.7)',\n              'rgba(255, 100, 64, 0.7)',\n              'rgba(255, 99, 132, 0.3)',\n            ],\n            borderColor: [\n              'rgba(54, 162, 235, 0.9)',\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)',\n              'rgba(255, 159, 64, 1)',\n            ],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        legend: {\n          position: 'bottom',\n          display: false,\n        },\n        layout: {\n          padding: {\n            bottom: 0,\n            left: 10,\n            right: 10,\n            top: 0,\n          },\n        },\n        title: {\n          display: true,\n          text: 'Total Cases by Month',\n          fontSize: 30,\n        },\n      },\n    });\n  }, [getDataByMonth, isLoading, months]);\n\n  return (\n    <div className={`chart ${isLoading ? 'loading' : ''}`}>\n      <div className=\"chart-inner\">\n        <canvas id=\"casesByTimelineCart\" style={{ margin: 0, padding: 0 }}></canvas>\n      </div>\n    </div>\n  );\n};\n\nexport default TimelineChart;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport { getGithubContributors } from '../repository/api';\nexport const Footer = () => {\n  const { data, isLoading } = useQuery('getgithubcontributors', getGithubContributors, {refetchOnWindowFocus: false});\n  return (\n    <div className=\"footer\">\n      <p>\n        This site is to show the latest on coronavirus cases based on official reports made from Belize. If you would\n        like to contribute to the source code, feel free to do so{' '}\n        <a href=\"https://github.com/lmanzanero/belize-coronavirus-tracker\" target=\"_blank\" rel=\"noopener noreferrer\">\n          here\n        </a>\n        <span role=\"img\" aria-label=\"globe\">\n          {' '}\n          🌎🇧🇿\n        </span>\n      </p>\n      <div className=\"contributors\">\n        <p>\n          <i>All Contributors</i> <span>({isLoading ? 'loading...' : data?.data.length})</span>\n        </p>\n        {isLoading && data\n          ? 'loading...'\n          : data?.data.map((contributor: any) => (\n              <a href={contributor.html_url} key={contributor.id} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={contributor.avatar_url} alt=\"users\" />\n              </a>\n            ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { getCasesByGender } from '../../repository/api';\nimport Chart from 'chart.js';\n\nexport const GenderChart = () => {\n  const { data, isLoading } = useQuery('getcasesbygender', getCasesByGender, {refetchOnWindowFocus: false});\n  useEffect(() => {\n    if (!data) return;\n\n    const { confirmale, confirmfemale } = data.data.features[0].attributes;\n    var ctx = document.getElementById('casesByGenderChart') as HTMLCanvasElement;\n    var casesByGenderPieChart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: ['Male', 'Female'],\n        datasets: [\n          {\n            label: '# of Votes',\n            data: [confirmale, confirmfemale],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.7)',\n              'rgba(54, 162, 235, 0.7)',\n              'rgba(255, 206, 86, 0.7)',\n              'rgba(75, 192, 192, 0.7)',\n              'rgba(153, 102, 255, 0.7)',\n              'rgba(255, 159, 64, 0.7)',\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)',\n              'rgba(153, 102, 255, 1)',\n              'rgba(255, 159, 64, 1)',\n            ],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        legend: {\n          position: 'bottom',\n        },\n        layout: {\n          padding: {\n            bottom: 0,\n            left: 10,\n            right: 10,\n            top: 0,\n          },\n        },\n        title: {\n          display: true,\n          text: 'Cases by Gender',\n          fontSize: 30,\n        },\n      },\n    });\n  }, [data, isLoading]);\n\n  return (\n    <div className={`chart ${isLoading ? 'loading' : ''}`}>\n      <div className=\"chart-inner\">\n        <canvas id=\"casesByGenderChart\" style={{ margin: 0, padding: 0 }}></canvas>\n      </div>\n    </div>\n  );\n};\n\nexport default GenderChart;\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { getDeathsByTimeLine, getDeathCasesSinceDayOne } from '../../repository/api';\nimport Chart from 'chart.js';\n\nconst DeathsTimelineChart = () => {\n  const { data, isLoading } = useQuery('deathtimelinecases', getDeathCasesSinceDayOne, {refetchOnWindowFocus: false});\n  const months = [\n    'Jan..',\n    'Feb..',\n    'Mar..',\n    'Apr..',\n    'May..',\n    'Jun..',\n    'Jul..',\n    'Aug..',\n    'Sep..',\n    'Oct...',\n    'Nov...',\n    'Dec...',\n  ];\n\n  useEffect(() => {\n    var ctx = document.getElementById('deathCasesByTimelineCart') as HTMLCanvasElement;\n    var casesByTimelineCart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n          labels: isLoading && data ? [] : months,\n          datasets: [{\n              label: 'Cases',\n              data: getDataByMonth(),\n              backgroundColor: [\n                  'rgba(54, 162, 235, 0.5)',\n                  'rgba(255, 99, 132, 0.7)',\n                  'rgba(54, 162, 235, 0.7)',\n                  'rgba(255, 206, 86, 0.7)',\n                  'rgba(75, 192, 192, 0.7)',\n                  'rgba(153, 102, 255, 0.7)',\n                  'rgba(255, 159, 64, 0.7)',\n                  'rgba(255, 159, 64, 0.7)',\n                  'rgba(255, 100, 64, 0.7)',\n                  'rgba(255, 99, 132, 0.5)',\n                  'rgba(255, 99, 132, 0.7)',\n                  'rgba(54, 162, 235, 0.7)',\n              ],\n              borderColor: [\n                  'rgba(54, 162, 235, 0.9)',\n                  'rgba(255, 99, 132, 1)',\n                  'rgba(54, 162, 235, 1)',\n                  'rgba(255, 206, 86, 1)',\n                  'rgba(75, 192, 192, 1)',\n                  'rgba(153, 102, 255, 1)',\n                  'rgba(255, 159, 64, 1)',\n                  'rgba(255, 159, 64, 1)',\n              ],\n              borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        legend: {\n          position: 'bottom',\n          display: false,\n        },\n        layout: {\n          padding: {\n            bottom: 0,\n            left: 10,\n            right: 10,\n            top: 0,\n          },\n        },\n        title: {\n          display: true,\n          text: 'Total Deaths by Month',\n          fontSize: 30,\n        },\n      },\n    });\n  }, [isLoading, months]);\n\n  const getDateFromData = () => {\n    const dataSet = isLoading\n      ? []\n      : data?.data.map((dayCases: any) => {\n          let date = new Date(dayCases.Date);\n          const formattedData = {\n            date: date.getMonth(),\n            cases: dayCases.Cases,\n          };\n          return formattedData;\n        });\n    return dataSet;\n  };\n\n  const getDataByMonth = () => {\n    let dataArray: any = [];\n    const dataSet = getDateFromData();\n    if (dataSet.length != 0) {\n      const monthData = months.map((monthName, i) => {\n        const monthCases = dataSet.filter((date: any) => date.date === i);\n        const filteredMonth = {\n          [monthName]:\n            monthCases.length === 0\n              ? 0\n              : Math.max.apply(\n                  Math,\n                  monthCases.map((month: any) => month.cases),\n                ),\n        };\n        return filteredMonth;\n      });\n\n      monthData.map((month) => {\n        const cases = Object.values(month);\n        dataArray.push(...cases);\n      });\n      // console.log(dataArray);\n      return dataArray;\n    }\n  };\n\n  return (\n    <div className={`chart ${isLoading ? 'loading' : ''}`}>\n      <div className=\"chart-inner\">\n        <canvas id=\"deathCasesByTimelineCart\" style={{ margin: 0, padding: 0 }}></canvas>\n      </div>\n    </div>\n  );\n};\n\nexport default DeathsTimelineChart;\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport Chart from 'chart.js';\nimport {\n  getConfirmedCasesSinceDayOne,\n  getRecoveredCasesSinceDayOne,\n  getDeathCasesSinceDayOne,\n  getTotalAllStatusCases,\n} from '../../repository/api';\nimport moment from 'moment';\n\nexport default function LiveTimelineChart() {\n  const { data, isLoading } = useQuery('livetimelinecases', getConfirmedCasesSinceDayOne);\n  const { data: recoveredData, isLoading: recoveredLoading } = useQuery(\n    'livetimelinerecoveredcases',\n    getRecoveredCasesSinceDayOne,\n  );\n  const { data: deathsData, isLoading: deathsLoading } = useQuery('livetimelinedeathscases', getDeathCasesSinceDayOne, {refetchOnWindowFocus: false});\n  const { data: activeData, isLoading: activeLoading } = useQuery('activecases', getTotalAllStatusCases, {refetchOnWindowFocus: false});\n\n  useEffect(() => {\n    let cfg: any = {\n      data: {\n        datasets: [\n          {\n            label: ' ✅ Confirmed',\n            backgroundColor: '#81B622',\n            borderColor: '#81B622',\n            data: cleanUpData(data),\n            type: 'line',\n            pointRadius: 0,\n            fill: false,\n            lineTension: 0,\n            borderWidth: 4,\n          },\n          {\n            label: ' 🦠 Active',\n            backgroundColor: '#f6cd61',\n            borderColor: '#f6cd61',\n            data: cleanUpActiveData(data),\n            type: 'line',\n            pointRadius: 0,\n            fill: false,\n            lineTension: 0,\n            borderWidth: 4,\n          },\n          {\n            label: ' 🥳 Recovered',\n            backgroundColor: '#0e9aa7',\n            borderColor: '#0e9aa7',\n            data: cleanUpData(recoveredData),\n            type: 'line',\n            pointRadius: 0,\n            fill: false,\n            lineTension: 0,\n            borderWidth: 4,\n          },\n          {\n            label: ' ☠️ Deaths',\n            backgroundColor: '#fe8a71',\n            borderColor: '#fe8a71',\n            data: cleanUpData(deathsData),\n            type: 'line',\n            pointRadius: 0,\n            fill: false,\n            lineTension: 0,\n            borderWidth: 4,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        animation: {\n          duration: 0,\n        },\n        title: {\n          display: true,\n          text: 'Belize 🦠 Coronavirus 🦠 Curve',\n          fontSize: 30,\n        },\n        legend: {\n          display: true,\n          position: 'bottom',\n        },\n        scales: {\n          xAxes: [\n            {\n              type: 'time',\n              distribution: 'series',\n              offset: true,\n              ticks: {\n                major: {\n                  enabled: true,\n                  fontStyle: 'bold',\n                },\n                source: 'data',\n                autoSkip: true,\n                autoSkipPadding: 75,\n                maxRotation: 0,\n                sampleSize: 100,\n              },\n              afterBuildTicks: function (scale: any, ticks: any) {\n                let majorUnit = scale._majorUnit;\n                let firstTick = ticks[0];\n                let i, ilen, val, tick, currMajor, lastMajor;\n\n                val = moment(ticks[0].value);\n                if (\n                  (majorUnit === 'minute' && val.second() === 0) ||\n                  (majorUnit === 'hour' && val.minute() === 0) ||\n                  (majorUnit === 'day' && val.hour() === 9) ||\n                  (majorUnit === 'month' && val.date() <= 3 && val.isoWeekday() === 1) ||\n                  (majorUnit === 'year' && val.month() === 0)\n                ) {\n                  firstTick.major = true;\n                } else {\n                  firstTick.major = false;\n                }\n                lastMajor = val.get(majorUnit);\n\n                for (i = 1, ilen = ticks.length; i < ilen; i++) {\n                  tick = ticks[i];\n                  val = moment(tick.value);\n                  currMajor = val.get(majorUnit);\n                  tick.major = currMajor !== lastMajor;\n                  lastMajor = currMajor;\n                }\n                return ticks;\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                drawBorder: false,\n              },\n              scaleLabel: {\n                display: true,\n                labelString: '🦠 cases',\n              },\n            },\n          ],\n        },\n        tooltips: {\n          intersect: false,\n          mode: 'index',\n          callbacks: {\n            label: function (tooltipItem: any, myData: any) {\n              var label = myData.datasets[tooltipItem.datasetIndex].label || '';\n              if (label) {\n                label += ': ';\n              }\n              label += parseFloat(tooltipItem.value).toFixed(0);\n              return label;\n            },\n          },\n        },\n      },\n    };\n\n    if (!isLoading && !recoveredLoading && !deathsLoading && !activeLoading) {\n      let ctx = document.getElementById('liveCasesByTimelineCart') as HTMLCanvasElement;\n      let liveCasesByTimelineCart = new Chart(ctx, cfg);\n    }\n\n    function cleanUpActiveData(dataSrc: any) {\n      if (activeData) {\n        const data = activeData.data.map((cases: any) => {\n          const chartData = {\n            t: new Date(cases.Date).getTime(),\n            y: `${cases.Active}`,\n          };\n          return chartData;\n        });\n        return data;\n      }\n    }\n\n    function cleanUpData(dataSrc: any) {\n      if (dataSrc) {\n        const dataArr = dataSrc.data.map((cases: any) => {\n          const chartData = {\n            t: new Date(cases.Date).getTime(),\n            y: `${cases.Cases}`,\n          };\n          return chartData;\n        });\n        return dataArr;\n      }\n    }\n  }, [isLoading, recoveredLoading, deathsLoading, activeLoading, data, recoveredData, deathsData, activeData]);\n\n  return (\n    <div className={`chart ${isLoading || recoveredLoading || deathsLoading ? 'loading' : ''}`}>\n      <div className=\"chart-inner\">\n        <canvas id=\"liveCasesByTimelineCart\" style={{ margin: '0', padding: 0 }}></canvas>\n        {/* <div>\n          <select id=\"type\">\n            <option value=\"line\">Line</option>\n            <option value=\"bar\">Bar</option>\n          </select>\n          <select id=\"unit\" defaultChecked>\n            <option value=\"second\">Second</option>\n            <option value=\"minute\">Minute</option>\n            <option value=\"hour\">Hour</option>\n            <option value=\"day\">Day</option>\n            <option value=\"month\">Month</option>\n            <option value=\"year\">Year</option>\n          </select>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/belize-flag.6cb5fd37.png\";","export default __webpack_public_path__ + \"static/media/positive.9aaf346e.png\";","export default __webpack_public_path__ + \"static/media/recovered.2750c68f.png\";","export default __webpack_public_path__ + \"static/media/negative.b101fbe3.png\";","export default __webpack_public_path__ + \"static/media/swab.75ada768.png\";","export default __webpack_public_path__ + \"static/media/death.2560f335.png\";","export default __webpack_public_path__ + \"static/media/search.c5623da6.png\";","export default __webpack_public_path__ + \"static/media/active.911a9289.png\";","import React, { useEffect, useState }  from 'react'\nimport { useQuery } from 'react-query';\nimport { getApiData } from '../repository/api';\nimport logo from '../icons/belize-flag.png';\nimport positive from '../icons/positive.png';\nimport recovered from '../icons/recovered.png';\nimport negative from '../icons/negative.png';\nimport swab from '../icons/swab.png';\nimport death from '../icons/death.png';\nimport search from '../icons/search.png';\nimport active from '../icons/active.png';\n\nexport default function Header() {\n  const { data, isLoading, refetch } = useQuery('latestdata', getApiData, {refetchOnWindowFocus: false});\n  console.log(data);\n  const [date, setDate] = useState('');\n  useEffect(() => { \n    if (data) {\n      let date = Number(data.data[0].lastUpdate);\n      let formmatedDate = new Date(date);\n      setDate(formmatedDate.toDateString()); \n    }\n  }, [data, isLoading, date]);\n  return (\n    <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>\n          <span className=\"virus\" role=\"img\" aria-label=\"virus\">\n            🦠\n          </span>{' '}\n          Belize Coronavirus (covid-19) cases and live updates{' '}\n          <span className=\"virus\" role=\"img\" aria-label=\"virus\">\n            🦠\n          </span>\n        </h1>\n        <h4>\n          🇧🇿 Total Cases: {isLoading ? 'loading...' : data?.data[0].confirmed} 🇧🇿 <br />\n          <br /> <span>Last Updated: {isLoading ? 'loading...' : date}</span>\n        </h4>\n        <div className=\"date-picker\">\n          <label>Covid on this day: </label>\n          <input type=\"date\" id=\"search\" name=\"search\" onChange={(e) =>  { \n                setDate(e.target.value);\n                refetch()\n              } \n            }/>  \n        </div>\n        <div className=\"screening-data\">\n          <div className=\"btn\">\n            <p className=\"title\">Test Done</p>\n            <img src={swab} alt=\"Belize Coronavirus updates\" />\n            <p className=\"text\">unavailable</p>\n          </div>\n          <div className=\"btn\">\n            <p className=\"title\">Under Investigation</p>\n            <img src={search} alt=\"Belize Coronavirus under investigation\" />\n            <p className=\"text\">unavailable</p>\n          </div>\n          <div className=\"btn\">\n            <p className=\"title\">Negative</p>\n            <img src={negative} alt=\"Belize negative cases\" />\n            <p className=\"text\">unavailable</p>\n          </div>\n          <div className=\"btn\">\n            <p className=\"title\">Confirmed</p>\n            <img src={positive} alt=\"Belize Coronavirus confirmed\" />\n            <p className=\"text\"> {isLoading ? 'loading...' : data?.data[0].confirmed} </p>\n          </div>\n          <div className=\"btn\">\n            <p className=\"title\">Deseased</p>\n            <img src={death} alt=\"Belize Coronavirus deseased\" />\n            <p className=\"text\"> {isLoading ? 'loading...' : data?.data[0].deaths}</p>\n          </div>\n          <div className=\"btn\">\n            <p className=\"title\">Recovered</p>\n            <img src={recovered} alt=\"Belize Coronavirus recovered\" />\n            <p className=\"text\"> {isLoading ? 'loading...' : data?.data[0].recovered}</p>\n          </div>\n          <div className=\"btn\">\n            <p className=\"title\">Active</p>\n            <img src={active} alt=\"Belize Coronavirus Active cases\" />\n            <p className=\"text\"> {isLoading ? 'loading...' : data?.data[0].active }</p>\n          </div>\n        </div>\n      </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useQuery } from 'react-query'\nimport { getCommunityCases} from '../repository/api'\nimport BelizeMap from './Map'\nimport virusIcon from '../icons/virus.png';\nimport { sortData } from '../utils/utils';\n\nexport default function MapSection() {\n  const getVillages = (e: any) => {\n    console.log(e.target.getAttribute('data-value'));\n    refetch()\n  }; \n\n  const { data, isLoading, error, refetch } = useQuery('communitycases', getCommunityCases,{refetchOnWindowFocus: false});\n  const [ mapData, setMapData ] = useState([]);\n  const [ mapAreas, setMapAreas ] = useState([]);\n\n    useEffect(() => { \n      if(data) { \n        const formattedCommunityData = data?.data.features.map((attributes: any) => {\n          const data = {\n           'name':  attributes?.attributes.DISTRICT,\n           'x': attributes?.attributes.x,\n           'y': attributes?.attributes.y,\n           'village': attributes?.attributes.SETTNAME,\n          }\n          return data;\n       }); \n        setMapData(formattedCommunityData);\n        const formattedApiData: any = sortData(formattedCommunityData, 'name');   \n        setMapAreas(formattedApiData);\n        formattedApiData.Belize.forEach((village: any)=> {\n          // console.log(\"village\", village);\n          // L.marker([village.x, village.y], { icon: virusIcon })\n          // .addTo(mymap)\n          // .bindPopup(`<b>${village.village}: cases 🦠</b>`)\n          // .openPopup(); \n        });\n      }\n \n    }, [data, isLoading])\n\n    // console.log(\"Map areas\", Object.values(mapAreas).forEach(name => console.log(name)))\n    const allData = Object.keys(mapAreas).map((area, index) => {  \n      return (\n          <div key={index} className=\"district-area\">\n                 {area}{' '}\n                <span className=\"virus\" role=\"img\" aria-label=\"virus\">\n                  🦠\n                </span>\n          </div>\n        );\n      });\n  \n  return (\n    <div className=\"map-container\">\n    <div className=\"map-container-inner\">\n      <div className=\"map-data-col\">\n        <h1 className=\"paper-title\">View Cases on Map</h1>\n        <div className=\"districts-row\">\n          <div className=\"district\" onClick={(e) => getVillages(e)} data-value=\"corozal\">\n            Corozal\n          </div>\n          <div className=\"district\" onClick={(e) => getVillages(e)} data-value=\"belize\">\n            Belize\n          </div>\n          <div className=\"district\" onClick={(e) => getVillages(e)} data-value=\"orangewalk\">\n            Orange Walk\n          </div>\n          <div className=\"district\" onClick={(e) => getVillages(e)} data-value=\"cayo\">\n            Cayo\n          </div>\n          <div className=\"district\" onClick={(e) => getVillages(e)} data-value=\"stanncreek\">\n            Stann Creek\n          </div>\n          <div className=\"district\" onClick={(e) => getVillages(e)} data-value=\"toledo\">\n            Toledo\n          </div>\n        </div>\n        <div className=\"affected-areas\">\n          { \n            allData\n          }\n        </div>\n      </div>\n      {/* <BelizeMap data={mapData} isLoading={isLoading} /> */}\n    </div>\n  </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Chart from './components/charts/Chart';\nimport TimelineChart from './components/charts/TimelineChart';\nimport { Footer } from './components/Footer';\nimport ReactGA from 'react-ga'; \nimport GenderChart from './components/charts/GenderChart';\nimport DeathsTimelineChart from './components/charts/DeathsTimelineChart';\nimport LiveTimelineChart from './components/charts/LiveTimelineChart';\nimport moment from 'moment'; \nimport Header from 'components/Header';\nimport MapSection from 'components/MapSection';\n\nexport const App = () => { \n\n  \n  useEffect(() => {\n    ReactGA.initialize('UA-175547717-1');\n    ReactGA.pageview(window.location.pathname + window.location.search); \n  }, []);\n\n  return (\n    <div className=\"App\">\n        <Header />\n      <div className=\"grid-2\">\n        <Chart/> \n        <GenderChart />\n      </div>\n      <div className=\"grid-2\">\n        <TimelineChart />\n        <DeathsTimelineChart />\n      </div>\n      <div className=\"container\">\n        <LiveTimelineChart />\n      </div>\n        <MapSection/>\n        <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nif (rootElement?.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n"],"sourceRoot":""}